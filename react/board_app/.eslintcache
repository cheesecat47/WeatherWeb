[{"D:\\project\\webpractice\\react\\board_app\\src\\index.js":"1","D:\\project\\webpractice\\react\\board_app\\src\\App.js":"2","D:\\project\\webpractice\\react\\board_app\\src\\routes\\Home.js":"3","D:\\project\\webpractice\\react\\board_app\\src\\routes\\Board.js":"4","D:\\project\\webpractice\\react\\board_app\\src\\components\\MainPage.js":"5","D:\\project\\webpractice\\react\\board_app\\src\\components\\Navigator.js":"6","D:\\project\\webpractice\\react\\board_app\\src\\components\\Article.js":"7","D:\\project\\webpractice\\react\\board_app\\src\\store.js":"8"},{"size":548,"mtime":1611066371677,"results":"9","hashOfConfig":"10"},{"size":552,"mtime":1610868545847,"results":"11","hashOfConfig":"10"},{"size":2912,"mtime":1610806773400,"results":"12","hashOfConfig":"10"},{"size":1029,"mtime":1610867804019,"results":"13","hashOfConfig":"10"},{"size":894,"mtime":1610622158282,"results":"14","hashOfConfig":"10"},{"size":1097,"mtime":1610536614435,"results":"15","hashOfConfig":"10"},{"size":1393,"mtime":1610867910628,"results":"16","hashOfConfig":"10"},{"size":1364,"mtime":1610866464679,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1l3wdzb",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},"D:\\project\\webpractice\\react\\board_app\\src\\index.js",[],"D:\\project\\webpractice\\react\\board_app\\src\\App.js",[],["38","39"],"D:\\project\\webpractice\\react\\board_app\\src\\routes\\Home.js",["40"],"import React from 'react';\r\n// import { Link } from 'react-router-dom';\r\n// import PropTypes from 'prop-types';\r\n// import Board from '../components/MainPage';\r\nimport MainPage from '../components/MainPage';\r\nimport '../css/MainPage.css';\r\n// import * as service from '../services/Api';\r\n// import Board from './Board';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    isLoading: true,\r\n    user: [{}],\r\n    board: [{\r\n      id: 1,\r\n      \"name\": \"대구캠게시판\",\r\n      user_id: \"안태건\",\r\n      article: [\r\n        {\r\n          article_id: 1,\r\n          title:\r\n            \"대학생 정기권 신청 가능한가asdasdadsd\",\r\n          context: \"아니 죽어도 안해주더라\"\r\n        },\r\n        {\r\n          article_id: 2,\r\n          title: \"대구캠 컴학 만세\",\r\n          context: \"만만세입니다\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 2,\r\n      \"name\": \"정보게시판\",\r\n      user_id: \"한진규\",\r\n      article: [\r\n        {\r\n          article_id: 1,\r\n          title:\r\n            \"정보 좀 주세요\",\r\n          context: \"정보는 없단다...\"\r\n        },\r\n        {\r\n          article_id: 2,\r\n          title: \"제발 좀 주시죠\",\r\n          context: \"나도 몰랑\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      id: 3,\r\n      \"name\": \"취업게시판\",\r\n      user_id: \"신주용\",\r\n      article: [\r\n        {\r\n          article_id: 1,\r\n          title:\r\n            \"취업 시켜 주시오\",\r\n          context: \"넌 대학원 가거라\"\r\n        },\r\n        {\r\n          article_id: 2,\r\n          title: \"대학원 가기 싫어요\",\r\n          context: \"싫으면 몰라\"\r\n        }\r\n      ]\r\n    }],\r\n  };\r\n\r\n\r\n  /* api server 어떤 식으로 받아올지 정하고 state update\r\n    getUserInfo = asnyc () => {\r\n      const user= await axios.get(\"url\");\r\n      this.setState({user:user})\r\n    }\r\n    getBoardInfo = asnyc () => {\r\n      const board= await axios.get(\"url\");\r\n      this.setState({board})\r\n    }\r\n    getArticleInfo = asnyc () => {\r\n      const article= await axios.get(\"url\");\r\n      this.setState({article})\r\n    }\r\n  */\r\n  componentDidMount() {\r\n    // console.log(this.state)\r\n    this.setState({ isLoading: false })\r\n  }\r\n  render() {\r\n    const { isLoading, user, board } = this.state;\r\n    console.log(board);\r\n\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader_text\">\"Loading\"</span>\r\n          </div>\r\n        ) : (\r\n            <div className=\"boards\">\r\n              {board.map(board => (\r\n                <MainPage\r\n                  key={board.id}\r\n                  id={board.id}\r\n                  name={board.name}\r\n                  user_id={board.user_id}\r\n                  article={board.article}\r\n                />\r\n              ))}\r\n            </div>)}\r\n      </section>);\r\n  }\r\n};\r\n\r\nexport default Home;","D:\\project\\webpractice\\react\\board_app\\src\\routes\\Board.js",[],"D:\\project\\webpractice\\react\\board_app\\src\\components\\MainPage.js",[],"D:\\project\\webpractice\\react\\board_app\\src\\components\\Navigator.js",[],"D:\\project\\webpractice\\react\\board_app\\src\\components\\Article.js",["41"],"import React, { useState } from 'react';\r\nimport { actionCreaters } from '../store';\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Article() {\r\n\r\n  // const btnWrite = (e) =>{\r\n  //   e.preventDefault();\r\n  //   return <Write/>\r\n  // }\r\n return (\r\n    <div>\r\n      <h1>Article</h1>\r\n      <h3>article 내용~~~~</h3>\r\n      {/* <button onClick={btnWrite}>글쓰기</button> */}\r\n    </div>);\r\n}\r\n\r\n// function Write({articleContent,writeArticle}) {\r\n//   const [input, setInput] = useState(\"\");\r\n\r\n//   function onSubmit(e) {\r\n//     e.preventDefault();\r\n//     setInput(\"\");\r\n//     writeArticle(input);\r\n//     // dispatch(addToDo(text));\r\n//   }\r\n//   const onChange = (e) => { setInput(e.target.value); }\r\n\r\n//   return (\r\n//     <div>\r\n//       <h2>글 작성....</h2>\r\n//       <form onSubmit={onSubmit}>\r\n//         <input type=\"text\" value={input} onChange={onChange}/>\r\n//       <button>작성</button>\r\n//       </form>\r\n//       <button>취소</button>\r\n//     </div>\r\n//   )\r\n\r\n// }\r\n\r\nfunction mapStateToprops(state) {\r\n  console.log(state);\r\n  return { articleContent: state };\r\n  // console.log(state);\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    writeArticle: (input) => dispatch(actionCreaters.addContent(input))\r\n  };\r\n}\r\nexport default connect(mapStateToprops, mapDispatchToProps)(Article);\r\n// connect (mapStateToprops,mapDispatchToProps)(Write);\r\n","D:\\project\\webpractice\\react\\board_app\\src\\store.js",["42","43","44","45"],"import React from 'react';\r\nimport { createStore } from 'redux';\r\n\r\n//useEffect({},[]) 두번째 인자에서 state ,data 등의 변화만을 감지해서 api에 데이터 요청하는\r\n//형식으로 짜면 되겠다....\r\n\r\n// const apiData={user: [],board: [],article: [],articleDetail: []};\r\n/*actionCreater function*/\r\n\r\nconst POST = \"POST\";\r\nconst DELETE = \"DELTE\";\r\nconst PATCh = \"PATCH\";\r\nconst GET = \"GET\";\r\n//user 정보 갱신하는 , board 정보 갱신, article 정보 갱신 func...\r\n\r\nconst getContent = () => {\r\n    return { type: GET };\r\n};\r\n\r\nconst addContent = (input) => {\r\n    return {\r\n        type: POST,\r\n        input\r\n    };\r\n};\r\n// console.log(apiData.user);\r\n// const setArticle = (data) => ({ articleID: data.articleID, articleSummary: data.articleSummary, articleTitle: data.articleTitle });\r\nconst reducer = (state = [], action) => {\r\n    switch (action.type) {\r\n        case GET:\r\n            return state;\r\n        case POST:\r\n            // console.log(\"action post에 왔다.\",state,action.input)\r\n            // const a=[{input:action.input}, ...state];\r\n            // console.log(a);\r\n            return [{input:action.input}, ...state];\r\n    }\r\n}\r\n\r\nconst store = createStore(reducer);\r\nexport const actionCreaters = {\r\n    addContent,\r\n    getContent\r\n    // deleteContent,\r\n    // updateContent\r\n}\r\n\r\nexport default store;\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":90,"column":24,"nodeType":"52","messageId":"53","endLine":90,"endColumn":28},{"ruleId":"50","severity":1,"message":"54","line":1,"column":17,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"50","severity":1,"message":"55","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":13},{"ruleId":"50","severity":1,"message":"56","line":11,"column":7,"nodeType":"52","messageId":"53","endLine":11,"endColumn":13},{"ruleId":"50","severity":1,"message":"57","line":12,"column":7,"nodeType":"52","messageId":"53","endLine":12,"endColumn":12},{"ruleId":"58","severity":1,"message":"59","line":29,"column":5,"nodeType":"60","messageId":"61","endLine":37,"endColumn":6},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'React' is defined but never used.","'DELETE' is assigned a value but never used.","'PATCh' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]